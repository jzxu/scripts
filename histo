#!/bin/sh

# Print an ascii histogram

nbins=10
len=72
while [ "$#" -gt 0 ]
do
case "$1" in
-n)
	if [ -z "$2" ]
	then
		echo "specify number of bins" 2>&1
		exit 1
	fi
	nbins=$2
	shift 2
	;;
-l)
	if [ -z "$2" ]
	then
		echo "specify length" 2>&1
		exit 1
	fi
	len=$2
	shift 2
	;;
*)
	input=$1
	shift 1
	;;
esac
done

exec awk -v nbins="$nbins" -v len="$len" '
function isnum(x) {
	return (x + 0 == x)
}

BEGIN { min=0; max=0; n=0; }
{
	for (i = 1; i <= NF; ++i) {
		if (!isnum($i))
			continue
		
		if (n == 0 || $i < min)
			min = $i
		if (n == 0 || $i > max)
			max = $i
		v[n++] = $i
	}
}
END {
	if (n > 0) {
		if (min == max) {
			nbins = 1
			bins[0] = n
			maxbin = n
		} else {
			nbins = n < nbins ? n : nbins
			binsize = (max - min) / nbins
			maxbin=0
			for (i = 0; i < n; ++i) {
				b = (v[i] - min) / binsize
				if (int(b) > 0 && b == int(b)) {
					b--
				}
				if (++bins[int(b)] > maxbin) {
					maxbin = bins[int(b)]
				}
			}
		}
		perhash = len / maxbin
		printf("%5g\n", min)
		bmax = min + binsize
		for (i = 0; i < nbins; ++i) {
			bar = sprintf("%*s%d", int(bins[i] * perhash), "/", bins[i])
			gsub(" ", "=", bar)
			printf("%5g |%s\n", bmax, bar)
			bmax += binsize
		}
	}
	printf ("\ntotal: %d\n", n)
}' $*
